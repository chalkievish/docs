openapi: 3.0.3
info:
  title: Vern API
  description: |
    The Vern API allows you to run tasks and retrieve task execution results.
  version: 1.0.0
servers:
  - url: https://vern.so/api/v1
    description: Production server
security:
  - ApiKeyAuth: []
paths:
  /runs:
    post:
      summary: Create a new task run
      description: Executes a task with the provided inputs
      operationId: createRun
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RunInput"
      responses:
        "200":
          description: Task run created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    description: Unique identifier for the run
                  queued_at:
                    type: string
                    format: date-time
                    description: Timestamp when the run was queued
                  inputs:
                    type: object
                    description: The inputs provided for the task
                    additionalProperties: true
        "400":
          description: Invalid request parameters
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: Invalid or missing API key
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "429":
          description: Too many requests, rate limit exceeded
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    options:
      summary: CORS support
      description: Handles CORS preflight requests
      responses:
        "204":
          description: CORS preflight response
  /runs/{id}:
    get:
      summary: Get a task run by ID
      description: Retrieves the details of a specific task run
      operationId: getRun
      parameters:
        - name: id
          in: path
          description: The ID of the run to retrieve
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Run details retrieved successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RunDetails"
        "400":
          description: Invalid request parameters
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: Invalid or missing API key
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Unauthorized access to the run
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "429":
          description: Too many requests, rate limit exceeded
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    options:
      summary: CORS support
      description: Handles CORS preflight requests
      responses:
        "204":
          description: CORS preflight response
components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: x-api-key
  schemas:
    RunInput:
      type: object
      required:
        - taskId
      properties:
        taskId:
          type: string
          description: The ID of the task to execute
        inputs:
          type: object
          description: The inputs required for the task
          additionalProperties: true
        url:
          type: string
          format: uri
          description: An optional URL to be processed by the task
      example:
        taskId: "task_123456"
        inputs:
          prompt: "Analyze the sentiment of this text"
          text: "I really enjoyed this product, it exceeded my expectations!"
    RunDetails:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the run
        task:
          type: string
          description: The name of the task that was executed
        inputs:
          type: object
          description: The inputs provided for the task
          additionalProperties: true
        status:
          type: string
          enum: [queued, running, complete, failed]
          description: The current status of the run
        created_at:
          type: string
          format: date-time
          description: Timestamp when the run was created
        started_at:
          type: string
          format: date-time
          description: Timestamp when the run started executing
        completed_at:
          type: string
          format: date-time
          description: Timestamp when the run completed
        response:
          type: object
          description: The response data from the task execution
          additionalProperties: true
    Error:
      type: object
      properties:
        error:
          type: string
          description: Error message
        status:
          type: string
          description: Error status
